name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sourcemod-version: [master]
        metamod-version: [master]
        libboost-version: [boost-1.84.0]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            compiler_cc: clang
            compiler_cxx: clang++

    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -yq --no-install-recommends g++-multilib ${{ matrix.compiler_cc }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: extension

      - name: Checkout SourceMod ${{ matrix.sourcemod-version }}
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sourcemod-version }}
          path: sourcemod
          submodules: recursive

      - name: Checkout MetaMod:Source ${{ matrix.metamod-version }}
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/metamod-source
          path: 'metamod'
          ref: ${{ matrix.metamod-version }}

      - name: Download libboost ${{ matrix.libboost-version }}
        run: |
          curl -L https://github.com/boostorg/boost/releases/download/${{ matrix.libboost-version }}/${{ matrix.libboost-version }}.tar.gz -o libboost.tar.gz
          tar -xvf libboost.tar.gz && rm libboost.tar.gz
          mv ${{ matrix.libboost-version }} libboost

      - name: Install AMBuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Install sourcemod dependencies
        run: |
          bash sourcemod/tools/checkout-deps.sh -m -s ${{ matrix.sdks }}

      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version

      - name: Build libboost
        working-directory: libboost
        run: |
          ./bootstrap.sh --prefix=build --with-libraries=thread,system
          ./b2 -j8 cflags=-m32 cxxflags=-m32 address-model=32 threading=multi architecture=x86 instruction-set=i686 link=static runtime-link=static
          ./b2 install

      - name: Build
        working-directory: extension
        shell: bash
        env:
          BREAKPAD_SYMBOL_SERVER: ${{ secrets.BREAKPAD_SYMBOL_SERVER }}
        run: |
          mkdir build && cd build
          python ../configure.py --sm-path="${{ github.workspace }}/sourcemod" --mms-path="${{ github.workspace }}/metamod" --libboost-path="${{ github.workspace }}/libboost" --enable-optimize --symbol-files
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sm-ext-socket-${{ runner.os }}-${{ env.GITHUB_SHA_SHORT }}
          path: extension/build/package
